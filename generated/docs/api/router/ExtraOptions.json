{"id":"api/router/ExtraOptions","title":"ExtraOptions","contents":"\n\n<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/router\", \"name\": \"@angular/router\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/router/ExtraOptions\", \"name\": \"ExtraOptions\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/router\">@angular/router</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/router/src/router_module.ts?message=docs(router)%3A%20请简述你的修改...#L388-L625\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/8.1.0-next.1/packages/router/src/router_module.ts#L388-L625\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  \n  <header class=\"api-header\">\n    <h1 id=\"extraoptions\">ExtraOptions<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/ExtraOptions#extraoptions\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label interface\">interface</label>\n    \n    \n    \n  </header>\n  \n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <section class=\"short-description\">\n    <p translation-result=\"on\">表示路由器的配置项。</p><p translation-origin=\"off\">Represents options to configure the router.</p>\n\n\n    \n  </section>\n  \n\n  \n\n  <section class=\"interface-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface <a href=\"api/router/ExtraOptions\" class=\"code-anchor\">ExtraOptions</a> {\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#enableTracing\"><span class=\"member-name\">enableTracing</span>?: boolean</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#useHash\"><span class=\"member-name\">useHash</span>?: boolean</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#initialNavigation\"><span class=\"member-name\">initialNavigation</span>?: InitialNavigation</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#errorHandler\"><span class=\"member-name\">errorHandler</span>?: ErrorHandler</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#preloadingStrategy\"><span class=\"member-name\">preloadingStrategy</span>?: any</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#onSameUrlNavigation\"><span class=\"member-name\">onSameUrlNavigation</span>?: 'reload' | 'ignore'</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#scrollPositionRestoration\"><span class=\"member-name\">scrollPositionRestoration</span>?: 'disabled' | 'enabled' | 'top'</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#anchorScrolling\"><span class=\"member-name\">anchorScrolling</span>?: 'disabled' | 'enabled'</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#scrollOffset\"><span class=\"member-name\">scrollOffset</span>?: [number, number] | (() => [number, number])</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#paramsInheritanceStrategy\"><span class=\"member-name\">paramsInheritanceStrategy</span>?: 'emptyOnly' | 'always'</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#malformedUriErrorHandler\"><span class=\"member-name\">malformedUriErrorHandler</span>?: (error: URIError, urlSerializer: UrlSerializer, url: string) => UrlTree</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#urlUpdateStrategy\"><span class=\"member-name\">urlUpdateStrategy</span>?: 'deferred' | 'eager'</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#relativeLinkResolution\"><span class=\"member-name\">relativeLinkResolution</span>?: 'legacy' | 'corrected'</a>\n}\n</code-example>\n\n  \n  \n\n\n  \n  \n\n</section>\n\n  \n\n  \n  \n\n  \n<section class=\"instance-properties\">\n  <a name=\"properties\"></a>\n  <h2 id=\"属性\">属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/ExtraOptions#属性\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>属性</th>\n        <th>说明</th>\n      </tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"enableTracing\"></a>\n          <code><span class=\"member-name\"><a href=\"api/router/ExtraOptions#enableTracing\" class=\"code-anchor\">enableTracing</a></span>?: boolean</code>\n        </td>\n        <td>\n          \n          <p translation-result=\"on\">让路由器将其所有的内部事件都记录到控制台中。</p><p translation-origin=\"off\">Makes the router log all its internal events to the console.</p>\n\n\n          \n          </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"useHash\"></a>\n          <code><span class=\"member-name\">useHash</span>?: boolean</code>\n        </td>\n        <td>\n          \n          <p translation-result=\"on\">修改位置策略（<code><a href=\"api/common/LocationStrategy\" class=\"code-anchor\">LocationStrategy</a></code>），用 URL 片段（<code>#</code>）代替 <code>history</code> API。</p><p translation-origin=\"off\">Enables the location strategy that uses the URL fragment instead of the history API.</p>\n\n\n          \n          </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"initialNavigation\"></a>\n          <code><span class=\"member-name\"><a href=\"api/router/ExtraOptions#initialNavigation\" class=\"code-anchor\">initialNavigation</a></span>?: InitialNavigation</code>\n        </td>\n        <td>\n          \n          <p translation-result=\"on\">禁用首次导航</p><p translation-origin=\"off\">Disables the initial navigation.</p>\n\n\n          \n          </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"errorHandler\"></a>\n          <code><span class=\"member-name\">errorHandler</span>?: <a href=\"api/core/ErrorHandler\" class=\"code-anchor\">ErrorHandler</a></code>\n        </td>\n        <td>\n          \n          <p translation-result=\"on\">自定义的错误处理器。</p><p translation-origin=\"off\">A custom error handler.</p>\n\n\n          \n          </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"preloadingStrategy\"></a>\n          <code><span class=\"member-name\"><a href=\"api/router/ExtraOptions#preloadingStrategy\" class=\"code-anchor\">preloadingStrategy</a></span>?: any</code>\n        </td>\n        <td>\n          \n          <p translation-result=\"on\">配置预加载策略，参见 <code><a href=\"api/router/PreloadAllModules\" class=\"code-anchor\">PreloadAllModules</a></code>。</p><p translation-origin=\"off\">Configures a preloading strategy. See <code><a href=\"api/router/PreloadAllModules\" class=\"code-anchor\">PreloadAllModules</a></code>.</p>\n\n\n          \n          </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"onSameUrlNavigation\"></a>\n          <code><span class=\"member-name\">onSameUrlNavigation</span>?: 'reload' | 'ignore'</code>\n        </td>\n        <td>\n          \n          <p translation-result=\"on\">规定当路由器收到一个导航到当前 URL 的请求时该如何处理。\n默认情况下，路由器会忽略本次导航。不过，这会阻止实现类似于\"刷新\"按钮的功能。\n使用该选项可以控制导航到当前 URL 时的行为。默认为 'ignore'。</p><p translation-origin=\"off\">Define what the router should do if it receives a navigation request to the current URL.\nBy default, the router will ignore this navigation. However, this prevents features such\nas a \"refresh\" button. Use this option to configure the behavior when navigating to the\ncurrent URL. Default is 'ignore'.</p>\n\n\n          \n          </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"scrollPositionRestoration\"></a>\n          <code><span class=\"member-name\"><a href=\"api/router/ExtraOptions#scrollPositionRestoration\" class=\"code-anchor\">scrollPositionRestoration</a></span>?: 'disabled' | 'enabled' | 'top'</code>\n        </td>\n        <td>\n          \n          <p translation-result=\"on\">配置是否需要在导航回来的时候恢复滚动位置。</p><p translation-origin=\"off\">Configures if the scroll position needs to be restored when navigating back.</p>\n\n\n          <ul>\n<li>\n<p translation-result=\"on\">'disabled' - 什么也不做（默认）。在导航时，会自动维护滚动位置</p><p translation-origin=\"off\">'disabled'--does nothing (default).  Scroll position will be maintained on navigation.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">'top' - 在任何一次导航中都把滚动位置设置为 x=0, y=0。</p><p translation-origin=\"off\">'top'--set the scroll position to x = 0, y = 0 on all navigation.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">  'enabled' —— 当向后导航时，滚动到以前的滚动位置。当向前导航时，如果提供了锚点，则自动滚动到那个锚点，否则把滚动位置设置为 [0, 0]。该选项将来会变成默认值。</p><p translation-origin=\"off\">'enabled'--restores the previous scroll position on backward navigation, else sets the\nposition to the anchor if one is provided, or sets the scroll position to [0, 0] (forward\nnavigation). This option will be the default in the future.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">你可以通过如下方式来适配启用时的行为，来自定义恢复滚动位置的策略：</p><p translation-origin=\"off\">You can implement custom scroll restoration behavior by adapting the enabled behavior as\nfollows:</p>\n\n<code-example language=\"typescript\">\nclass AppModule {\n  constructor(router: <a href=\"api/router/Router\" class=\"code-anchor\">Router</a>, viewportScroller: <a href=\"api/common/ViewportScroller\" class=\"code-anchor\">ViewportScroller</a>) {\n    router.events.pipe(\n      filter((e: <a href=\"api/router/Event\" class=\"code-anchor\">Event</a>): e is <a href=\"api/router/Scroll\" class=\"code-anchor\">Scroll</a> => e instanceof <a href=\"api/router/Scroll\" class=\"code-anchor\">Scroll</a>)\n    ).subscribe(e => {\n      if (e.position) {\n        // backward navigation\n        viewportScroller.scrollToPosition(e.position);\n      } else if (e.anchor) {\n        // <a href=\"api/router/Scroll#anchor\" class=\"code-anchor\">anchor</a> navigation\n        viewportScroller.scrollToAnchor(e.anchor);\n      } else {\n        // forward navigation\n        viewportScroller.scrollToPosition([0, 0]);\n      }\n    });\n  }\n}\n</code-example>\n\n          </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"anchorScrolling\"></a>\n          <code><span class=\"member-name\"><a href=\"api/router/ExtraOptions#anchorScrolling\" class=\"code-anchor\">anchorScrolling</a></span>?: 'disabled' | 'enabled'</code>\n        </td>\n        <td>\n          \n          <p translation-result=\"on\">配置当 url 中带有片段（<code>#</code>）时路由器是否滚动到那个元素。</p><p translation-origin=\"off\">Configures if the router should scroll to the element when the url has a fragment.</p>\n\n\n          <ul>\n<li>\n<p translation-result=\"on\">'disabled' - 什么也不做（默认）。</p><p translation-origin=\"off\">'disabled'--does nothing (default).</p>\n\n</li>\n<li>\n<p translation-result=\"on\">'enabled' - 滚动到该元素。将来该选项会变为默认值。</p><p translation-origin=\"off\">'enabled'--scrolls to the element. This option will be the default in the future.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">在 'popstate' 时，不会自动滚动到锚点，而是恢复应用中保存的滚动位置，或滚动到顶部。</p><p translation-origin=\"off\">Anchor scrolling does not happen on 'popstate'. Instead, we restore the position\nthat we stored or scroll to the top.</p>\n\n\n          </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"scrollOffset\"></a>\n          <code><span class=\"member-name\"><a href=\"api/router/ExtraOptions#scrollOffset\" class=\"code-anchor\">scrollOffset</a></span>?: [number, number] | (() => [number, number])</code>\n        </td>\n        <td>\n          \n          <p translation-result=\"on\">配置当滚动到一个元素时，路由器使用的滚动偏移。</p><p translation-origin=\"off\">Configures the scroll offset the router will use when scrolling to an element.</p>\n\n\n          <p translation-result=\"on\">当给出两个数字时，路由器总会使用它们。\n当给出一个函数时，路由器每当要恢复滚动位置时，都会调用该函数。</p><p translation-origin=\"off\">When given a tuple with two numbers, the router will always use the numbers.\nWhen given a function, the router will invoke the function every time it restores scroll\nposition.</p>\n\n\n          </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"paramsInheritanceStrategy\"></a>\n          <code><span class=\"member-name\">paramsInheritanceStrategy</span>?: 'emptyOnly' | 'always'</code>\n        </td>\n        <td>\n          \n          <p translation-result=\"on\">定义路由器如何把父路由的参数、数据和解析出的数据合并到子路由。有效的选项包括：</p><p translation-origin=\"off\">Defines how the router merges params, data and resolved data from parent to child\nroutes. Available options are:</p>\n\n\n          <ul>\n<li>\n<p translation-result=\"on\"><code>'emptyOnly'</code>，默认值，只从无路径或无组件的路由中继承父路由的参数。</p><p translation-origin=\"off\"><code>'emptyOnly'</code>, the default, only inherits parent params for path-less or component-less\nroutes.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>'always'</code>，无条件继承父路由的参数。</p><p translation-origin=\"off\"><code>'always'</code>, enables unconditional inheritance of parent params.</p>\n\n</li>\n</ul>\n\n          </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"malformedUriErrorHandler\"></a>\n          <code><span class=\"member-name\">malformedUriErrorHandler</span>?: (error: URIError, urlSerializer: <a href=\"api/router/UrlSerializer\" class=\"code-anchor\">UrlSerializer</a>, url: string) => <a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>\n        </td>\n        <td>\n          \n          <p translation-result=\"on\">一个自定义的 URI 格式无效错误的处理器。每当 encodeURI 包含无效字符序列时，就会调用该处理器。默认的实现是跳转到根路径，抛弃任何路径和参数信息。该函数传入三个参数：</p><p translation-origin=\"off\">A custom malformed uri error handler function. This handler is invoked when encodedURI contains\ninvalid character sequences. The default implementation is to redirect to the root url dropping\nany path or param info. This function passes three parameters:</p>\n\n\n          <ul>\n<li>\n<p translation-result=\"on\"><code>'URIError'</code> - 当传入错误的 URL 时抛出的错误</p><p translation-origin=\"off\"><code>'URIError'</code> - Error thrown when parsing a bad URL</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>'<a href=\"api/router/UrlSerializer\" class=\"code-anchor\">UrlSerializer</a>'</code> - 路由器所配置的 UrlSerializer。</p><p translation-origin=\"off\"><code>'<a href=\"api/router/UrlSerializer\" class=\"code-anchor\">UrlSerializer</a>'</code> - UrlSerializer that’s configured with the router.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>'url'</code> - 导致 URIError 的格式无效的 URL</p><p translation-origin=\"off\"><code>'url'</code> -  The malformed URL that caused the URIError</p>\n\n</li>\n</ul>\n\n          </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"urlUpdateStrategy\"></a>\n          <code><span class=\"member-name\">urlUpdateStrategy</span>?: 'deferred' | 'eager'</code>\n        </td>\n        <td>\n          \n          <p translation-result=\"on\">定义路由器要何时更新浏览器的 URL。默认行为是在每次成功的导航之后更新。\n不过，有些应用会更愿意在导航开始时就更新。最常见的情况是尽早更新 URL，这样当导航失败时，你就可以在出错的 URL 上显示一条错误信息了。\n可用的选项包括：</p><p translation-origin=\"off\">Defines when the router updates the browser URL. The default behavior is to update after\nsuccessful navigation. However, some applications may prefer a mode where the URL gets\nupdated at the beginning of navigation. The most common use case would be updating the\nURL early so if navigation fails, you can show an error message with the URL that failed.\nAvailable options are:</p>\n\n\n          <ul>\n<li>\n<p translation-result=\"on\"><code>'deferred'</code>，默认值，在导航完毕后更新浏览器 URL。</p><p translation-origin=\"off\"><code>'deferred'</code>, the default, updates the browser URL after navigation has finished.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>'eager'</code>，在导航开始时更新浏览器的 URL。</p><p translation-origin=\"off\"><code>'eager'</code>, updates browser URL at the beginning of navigation.</p>\n\n</li>\n</ul>\n\n          </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"relativeLinkResolution\"></a>\n          <code><span class=\"member-name\">relativeLinkResolution</span>?: 'legacy' | 'corrected'</code>\n        </td>\n        <td>\n          \n          <p translation-result=\"on\">启用 BUG 补丁，纠正空路径组件的相对链接解析问题。</p><p translation-origin=\"off\">Enables a bug fix that corrects relative link resolution in components with empty paths.\nExample:</p>\n\n\n          <code-example>\nconst routes = [\n  {\n    path: '',\n    component: ContainerComponent,\n    children: [\n      { path: '<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>', component: AComponent },\n      { path: 'b', component: BComponent },\n    ]\n  }\n];\n</code-example>\n<p translation-result=\"on\">在 <code>ContainerComponent</code> 中不能这样用：</p><p translation-origin=\"off\">From the <code>ContainerComponent</code>, this will not work:</p>\n\n<p><code>&#x3C;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> [<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]=\"['./<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>']\">Link to A&#x3C;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>></code></p>\n<p translation-result=\"on\">不过，可以这样用：</p><p translation-origin=\"off\">However, this will work:</p>\n\n<p><code>&#x3C;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> [<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]=\"['../<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>']\">Link to A&#x3C;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>></code></p>\n<p translation-result=\"on\">换句话说，要使用 <code>../</code> 而不是 <code>./</code>。它是当前版本的默认行为。把该选项设置为 <code>corrected</code> 可以启用这项修正。</p><p translation-origin=\"off\">In other words, you're required to use <code>../</code> rather than <code>./</code>. This is currently the default\nbehavior. Setting this option to <code>corrected</code> enables the fix.</p>\n\n\n          </td>\n    </tr>\n    \n    </tbody>\n  </table>\n</section>\n  \n\n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/router\n - api/router/PreloadAllModules\n - api/router/ROUTER_CONFIGURATION\n - api/router/Router\n - api/router/RouterModule\n - api/router/testing/RouterTestingModule\n - api/router/testing/setupTestingRouter\n - guide/router\n-->\n<!-- links from this doc:\n - /api\n - api/common/LocationStrategy\n - api/common/ViewportScroller\n - api/core/ErrorHandler\n - api/router\n - api/router/Event\n - api/router/ExtraOptions#anchorScrolling\n - api/router/ExtraOptions#enableTracing\n - api/router/ExtraOptions#errorHandler\n - api/router/ExtraOptions#extraoptions\n - api/router/ExtraOptions#initialNavigation\n - api/router/ExtraOptions#malformedUriErrorHandler\n - api/router/ExtraOptions#onSameUrlNavigation\n - api/router/ExtraOptions#paramsInheritanceStrategy\n - api/router/ExtraOptions#preloadingStrategy\n - api/router/ExtraOptions#relativeLinkResolution\n - api/router/ExtraOptions#scrollOffset\n - api/router/ExtraOptions#scrollPositionRestoration\n - api/router/ExtraOptions#urlUpdateStrategy\n - api/router/ExtraOptions#useHash\n - api/router/ExtraOptions#属性\n - api/router/PreloadAllModules\n - api/router/Router\n - api/router/RouterLink\n - api/router/RouterLinkWithHref\n - api/router/Scroll\n - api/router/Scroll#anchor\n - api/router/UrlSerializer\n - api/router/UrlTree\n - https://github.com/angular/angular-cn/edit/aio/packages/router/src/router_module.ts?message=docs(router)%3A%20请简述你的修改...#L388-L625\n - https://github.com/angular/angular-cn/tree/8.1.0-next.1/packages/router/src/router_module.ts#L388-L625\n-->"}